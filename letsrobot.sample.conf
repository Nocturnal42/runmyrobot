# Sample Configuration file for the LetsRobot python controller
# Global robot variables

[robot]
# This is your username on the letsrobot site. This is the user that is allowed to issue commands via chat 
owner=Nocturnal

# Your robots id. The site will provide you with this and the camera id when you create a new robot.
robot_id=40680529

# Your robots camera id
camera_id=93738209

# Motor controller type for your robot. Current valid types are serial_board, motor_hat, gopigo2, gopigo3, l298n, motozero, pololu, adafruit_pwm, owi_arm or none.
type=none

# Only used for motor_hat, mdd10 and telly
turn_delay=0.4
straight_delay=0.5



[tts]
# Specify the TTS engine you are using here. Current valid types are espeak, festival and none
type=none

# TTS volume
tts_volume=80

# Allow anonymous users chat messages to be broadcast over TTS. Set to false to block them.
anon_tts=true

# Block URLS from being broadcast over TTS. Set to true to block them.
filter_url_tts=false

# Enable extended chat commands
ext_chat=true

# ALSA HW number for your playback device
hw_num=1

[espeak]
# espeak specific TTS settings go here

# voice gender, male or female
male = True
 
# voice number
voice_number=1


[festival]
# Festival specific TTS settings go here

[polly]
# polly requires you to have an amazon aws account and have setup a IAM user will access to polly
robot_voice=Matthew
owner_voice=Russell
random_voices=true
access_key=
secrets_key=
region_name=us-east-1

[adafruit_pwm]
address=0x40
pwm_freq=60
more_debug=False

[owi_arm]

[serial]
serial_device=/dev/ttyACM0

[motor_hat]
day_speed = 255
night_speed = 255
turning_speed = 250
forward=[-1,1,-1,1]
left=[1,1,1,1]

# Enable charging behaviours 
slow_for_low_battery = false

# Charging stuff
charge_hours = 3.0
discharge_hours = 8.0
chargeCheckInterval=5
chargeIONumber = 17

[gopigo2]
drive_time=0.35
turn_time=0.15

[gopigo3]
drive_time=0.35
turn_time=0.15

# Settings specific to the l298n dual h-bridge motor driver
[l298n]
StepPinForward=12,16
StepPinBackward=11,15
StepPinLeft=15,12
StepPinRight=11,16
#Change sleeptime to adjust driving speed
#Change rotatetimes to adjust the turning. Will be multiplicated with sleeptime.
#IMPORTANT NOTE: How this is handled has changed, your values may no longer be correct
sleeptime=0.2
rotatetimes=5


[motozero]
MotorDelay = 0.3
# Motor1 is back left
# Motor1A is reverse
# Motor1B is forward
Motor1A = 24
Motor1B = 27
Motor1Enable = 5

# Motor2 is back right
# Motor2A is reverse
# Motor2B is forward
Motor2A = 6
Motor2B = 22
Motor2Enable = 17

# Motor3 is ?
# Motor3A is reverse
# Motor3B is forward
Motor3A = 23
Motor3B = 16
Motor3Enable = 12

# Motor4 is ?
# Motor4A is reverse
# Motor4B is forward
Motor4A = 13
Motor4B = 18
Motor4Enable = 25

[pololu]
drivingSpeed=90

[mc33926]
drivingSpeed=180


[max7219]
ledrotate=180
#parser.add_argument('--led', help="Type of LED for example max7219", default=None)
#parser.add_argument('--ledrotate', help="Rotates the LED matrix. Example: 180", default=None)

# Tellys require ALSA hardware numner 2 in the tts settings
[telly]
led-max-brightness=255
# DO NOT use these until I am sure its alright. Use the command line instead.
#right_wheel_forward_speed = 
#right_wheel_backward_speed = 
#left_wheel_forward_speed = 
#right_wheel_backward_speed = 

# This is mostly stuff you probably shouldn't be touching
[misc]
# Enable the controller to look for custom handler code
custom_hardware = True
# Enable the controller to look for custom TTS handler code
custom_tts = True
# Enable the controller to look for custom chat handler code
custom_chat = True
# Enable the watchdog timer, if you are not using a raspberry pi, you won't want this.
watchdog = True
# Enable async handling of commands, you handler with either need to be able to
# function asyncronously or it will need it's own blocking.
enable_async=False

# disable the chat server connection
no_chat_server = False

# Path to v4l2-ctl
v4l2-ctl=/usr/bin/v4l2-ctl

# Output debugging information to the console
debug_messages=false

# Server the robot connects to
info_server = letsrobot.tv

# wifi stuff
secret_key=
auto_wifi= False
wpa_template = ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
               update_config=1
               country=GB

               network={{
                  ssid=\"beepx\"
                  psk=\"yellow123\"
                  key_mgmt=WPA-PSK
               }}

               network={{
                  ssid=\"{name}\"
                  psk=\"{password}\"
                  key_mgmt=WPA-PSK
               }}

# Enable reverse ssh functionailty. This only enables the functionality in the 
# controller, you still need a key file for this actually work.
reverse_ssh = True
reverse-ssh-key-file='/home/pi/reverse_ssh_key1.pem'
reverse-ssh-host='ubuntu@52.52.204.174'

# Periodically check internet connection status, and report failure / connect
# over tts
check_internet=True
check_freq=120

# Disable requiring valid ssl certs for those occasions where they fail
secure_cert=True
